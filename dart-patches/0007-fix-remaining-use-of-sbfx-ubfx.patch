From 2a0ec7e51a99f547ff4dedae4ef73fd74a816f61 Mon Sep 17 00:00:00 2001
From: Hannes Winkler <hanneswinkler2000@web.de>
Date: Tue, 7 May 2024 16:55:01 +0200
Subject: [PATCH 7/8] fix remaining use of sbfx, ubfx

---
 .../backend/flow_graph_compiler_arm.cc         | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/runtime/vm/compiler/backend/flow_graph_compiler_arm.cc b/runtime/vm/compiler/backend/flow_graph_compiler_arm.cc
index 49d8e7cef8c..44fec174246 100644
--- a/runtime/vm/compiler/backend/flow_graph_compiler_arm.cc
+++ b/runtime/vm/compiler/backend/flow_graph_compiler_arm.cc
@@ -950,20 +950,32 @@ void FlowGraphCompiler::EmitNativeMoveArchitecture(
     const auto& src = source.AsRegisters();
     ASSERT(src.num_regs() == 1);
     ASSERT(src_size <= 4);
+    ASSERT(src_size != 3);
     const auto src_reg = src.reg_at(0);
 
     if (destination.IsRegisters()) {
       const auto& dst = destination.AsRegisters();
       ASSERT(dst.num_regs() == 1);
       const auto dst_reg = dst.reg_at(0);
-      ASSERT(destination.container_type().SizeInBytes() <= 4);
+
+      ASSERT(dst_size <= 4);
+      ASSERT(dst_size != 3);
+
       if (!sign_or_zero_extend) {
         __ MoveRegister(dst_reg, src_reg);
       } else {
         if (src_payload_type.IsSigned()) {
-          __ sbfx(dst_reg, src_reg, 0, src_size * kBitsPerByte);
+          if (src_size == 1) {
+            __ sxtb(dst_reg, src_reg);
+          } else if (src_size == 2) {
+            __ sxth(dst_reg, src_reg);
+          }
         } else {
-          __ ubfx(dst_reg, src_reg, 0, src_size * kBitsPerByte);
+          if (src_size == 1) {
+            __ uxtb(dst_reg, src_reg);
+          } else if (src_size == 2) {
+            __ uxth(dst_reg, src_reg);
+          }
         }
       }
 
-- 
2.40.1

